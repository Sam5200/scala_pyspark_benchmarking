scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
facet_wrap(~Type,scales='free')
ggplot_colors(p)
filtered=merged_data %>% filter(Type=='Column Operation'
,! Operation %in%  c('Full Outer Join 3 Columns'
,'Left Outer Join 3 Columns'
,'Inner Join 3 Columns')
)
plot_operations(filtered)
#functions
plot_operations = function(filtered){
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
p=
ggplot(data=filtered, aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
#facet_grid(Operation~Setup,scales='free')
ggplot_colors(p,legend.position = 'bottom')
}
filtered=merged_data %>% filter(Type=='Aggregate Operation')
plot_operations(filtered)
filtered=data_raw
filtered$Operation = forcats::fct_reorder(filtered$RunID,filtered[[targetVar]],.fun=median,desc=F)
p=ggplot(data=filtered, aes_string(x='RunID',y=targetVar,fill='Language',color='Language')) +
geom_boxplot(outlier.size = 0.5,size=0.5,alpha=0.6,outlier.shape = outliersShape)  +
scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile)))
ggplot_colors(p)
quantile(filtered[[targetVar]],probs=outliersQuantile)
outliersQuantile
#functions
plot_operations = function(filtered){
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset + Language  + Operation '))
model = lm(data=filtered, formula=form)
summary(model)
p=
ggplot(data=filtered, aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
#facet_grid(Operation~Setup,scales='free')
ggplot_colors(p,legend.position = 'bottom')
}
filtered=merged_data %>% filter(Type=='Row Operation')
plot_operations(filtered)
#functions
plot_operations = function(filtered){
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset + Language  + Operation '))
model = lm(data=filtered, formula=form)
p=
ggplot(data=filtered, aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
#facet_grid(Operation~Setup,scales='free')
return(plot=ggplot_colors(p,legend.position = 'bottom')  ,
model=model)
}
filtered=merged_data %>% filter(Type=='Row Operation')
t=plot_operations(filtered)
#functions
plot_operations = function(filtered){
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset + Language  + Operation '))
model = lm(data=filtered, formula=form)
p=
ggplot(data=filtered, aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
#facet_grid(Operation~Setup,scales='free')
ggplot_colors(p,legend.position = 'bottom')
}
filtered=merged_data %>% filter(Type=='Row Operation')
plot_operations(filtered)
#functions
plot_operations = function(filtered){
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset + Language  + Operation '))
model = lm(data=filtered, formula=form)
print(summary(model))
p=
ggplot(data=filtered, aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
#facet_grid(Operation~Setup,scales='free')
ggplot_colors(p,legend.position = 'bottom')
}
filtered=merged_data %>% filter(Type=='Row Operation')
plot_operations(filtered)
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset + Language  + Operation '))
model = lm(data=filtered, formula=form)
model$coefficients
model$residuals
model$effects
model$qr$rank
model$qr$qraux
summary(model)
t=summary(model)
t$terms
t$residuals
t$terms
t$sigma
t$df
t$fstatistic
t$coefficients
t$coefficients[,4]
which(t$coefficients[,4]<0.05)
t$coefficients[,4]<0.05
names(t$coefficients)[t$coefficients[,4]<0.05]
names(t$coefficients)[t$coefficients[,4]<0.05,]
names(t$coefficients)
class(t$coefficients)
[t$coefficients[1,4]<0.05,]
[t$coefficients[1,4]<0.05]
[t$coefficients[1,4]<0.05
t$coefficients[1,4]<0.05
t$coefficients[,4]<0.05
t$coefficients[1,]
t$coefficients[1,1]
t$coefficients[1,4]
t$coefficients[,4]
names(t$coefficients[,4])
names(t$coefficients[,4]<0.05)
names(t$coefficients[,4])[t$coefficients[,4]<0.05]
if(onlySignificant) {
keep=  names(t$coefficients[,4])[t$coefficients[,4]<0.05]
} else keep= names(t$coefficients[,4])
keep=  names(t$coefficients[,4])[t$coefficients[,4]<0.05]
p=
ggplot(data=filtered[filtered$Operation %in% keep], aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
ggplot_colors(p,legend.position = 'bottom')
p=  ggplot(data=filtered[filtered$Operation %in% keep,], aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
#facet_grid(Operation~Setup,scales='free')
ggplot_colors(p,legend.position = 'bottom')
filtered[filtered$Operation %in% keep,]
keep
filtered$Operation
t$coefficients
t$terms
t$terms[[1]]
t$terms[[2]]
t$terms[[3]]
t$residuals
model$coefficients
model$xlevels
model$xlevels$Operation
keep
t$coefficients[,4]<0.05]
t$coefficients[,4]<0.05
model = lm(data=filtered, formula=form)
print(summary(model))
keep=  names(t$coefficients[,4])[t$coefficients[,4]<0.05]
keep
gsub('Operation',keep)
grep('Operation',keep)
keep[grep('Operation',keep)]
gsub('Operaion','',keep[grep('Operation',keep)])
gsub('Operation','',keep[grep('Operation',keep)])
filtered[filtered$Operation %in% keep,]
keep
keep=  names(t$coefficients[,4])[t$coefficients[,4]<0.05]
data2 = filtered[filtered$Operation %in% keep,]
data2
filtered$Operation
filtered$Operation
keep
keep=  names(t$coefficients[,4])[t$coefficients[,4]<0.05]
keep = gsub('Operation','',keep[grep('Operation',keep)])
keep
filtered[filtered$Operation %in% keep,]
#functions
plot_operations = function(filtered,onlySignificant = T){
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset + Language  + Operation '))
model = lm(data=filtered, formula=form)
print(summary(model))
if(onlySignificant) {
keep=  names(t$coefficients[,4])[t$coefficients[,4]<0.05]
keep = gsub('Operation','',keep[grep('Operation',keep)])
data2 = filtered[filtered$Operation %in% keep,]
} else fata2=filtered
p=  ggplot(data=data2, aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
#facet_grid(Operation~Setup,scales='free')
ggplot_colors(p,legend.position = 'bottom')
}
data2 = filtered[filtered$Operation %in% keep,]
p=  ggplot(data=data2, aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
ggplot_colors(p,legend.position = 'bottom')
print(summary(model))
ggplot_colors(p,legend.position = 'bottom')
filtered=merged_data %>% filter(Type=='Row Operation')
plot_operations(filtered)
form=as.formula(paste0(targetVar,' ~ Dataset + Language * Operation '))
model = lm(data=filtered, formula=form)
print(summary(model))
keep=  names(t$coefficients[,4])[t$coefficients[,4]<0.05]
form=as.formula(paste0(targetVar,' ~ Dataset + Language * Operation '))
model = lm(data=filtered, formula=form)
keep=  names(t$coefficients[,4])[t$coefficients[,4]<0.05]
keep = gsub('LanguageScala:Operation','',keep[grep('LanguageScala:Operation',keep)])
data2 = filtered[filtered$Operation %in% keep,]
p=  ggplot(data=data2, aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
ggplot_colors(p,legend.position = 'bottom')
keep
keep=  names(t$coefficients[,4])[t$coefficients[,4]<0.05]
keep = gsub('LanguageScala:Operation','',keep[grep('LanguageScala:Operation',keep)])
keep
keep=  names(t$coefficients[,4])[t$coefficients[,4]<0.05]
keep
form=as.formula(paste0(targetVar,' ~ Dataset + Language * Operation '))
model = lm(data=filtered, formula=form)
keep=  names(t$coefficients[,4])[t$coefficients[,4]<0.05]
keep
print(summary(model))
keep=  names(summary(model)$coefficients[,4])[t$coefficients[,4]<0.05]
keep
keep = gsub('LanguageScala:Operation','',keep[grep('LanguageScala:Operation',keep)])
keep
print(summary(model))
keep=  names(summary(model)$coefficients[,4])[t$coefficients[,4]<0.05]
keep
model = lm(data=filtered, formula=form)
modelS=summary(model)
keep=  names(modelS$coefficients[,4])[modelS$coefficients[,4]<0.05]
keep = gsub('LanguageScala:Operation','',keep[grep('LanguageScala:Operation',keep)])
keep
#functions
plot_operations = function(filtered,onlySignificant = T){
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset + Language * Operation '))
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
if(onlySignificant) {
keep=  names(modelS$coefficients[,4])[modelS$coefficients[,4]<0.05]
keep = gsub('LanguageScala:Operation','',keep[grep('LanguageScala:Operation',keep)])
data2 = filtered[filtered$Operation %in% keep,]
} else data2=filtered
p=  ggplot(data=data2, aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
#facet_grid(Operation~Setup,scales='free')
ggplot_colors(p,legend.position = 'bottom')
}
filtered=merged_data %>% filter(Type=='Row Operation')
plot_operations(filtered)
filtered=merged_data %>% filter(Type=='Column Operation'
,! Operation %in%  c('Full Outer Join 3 Columns'
,'Left Outer Join 3 Columns'
,'Inner Join 3 Columns')
)
plot_operations(filtered)
filtered=merged_data %>% filter(Type=='Column Operation'
,! Operation %in%  c('Full Outer Join 3 Columns'
,'Left Outer Join 3 Columns'
,'Inner Join 3 Columns')
)
plot_operations(filtered,onlySignificant = F)
h4("Only significant")
H4("Only significant")
#functions
plot_operations = function(filtered,onlySignificant = T){
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset + Language * Operation '))
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
if(onlySignificant) {
keep=  names(modelS$coefficients[,4])[modelS$coefficients[,4]<0.05]
keep = gsub('LanguageScala:Operation','',keep[grep('LanguageScala:Operation',keep)])
data2 = filtered[filtered$Operation %in% keep,]
print("Only Significant Elements")
if(nrow(data2)==0) print("No Significant Elements") return()
#functions
plot_operations = function(filtered,onlySignificant = T){
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset + Language * Operation '))
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
if(onlySignificant) {
keep=  names(modelS$coefficients[,4])[modelS$coefficients[,4]<0.05]
keep = gsub('LanguageScala:Operation','',keep[grep('LanguageScala:Operation',keep)])
data2 = filtered[filtered$Operation %in% keep,]
print("Only Significant Elements")
if(nrow(data2)==0) {print("No Significant Elements") ; return()}
} else data2=filtered
p=  ggplot(data=data2, aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
#facet_grid(Operation~Setup,scales='free')
ggplot_colors(p,legend.position = 'bottom')
}
filtered=merged_data %>% filter(Type=='Row Operation')
plot_operations(filtered)
plot_operations(filtered,onlySignificant = F)
filtered=merged_data %>% filter(Type=='Aggregate Operation')
plot_operations(filtered,F)
filtered=merged_data %>% filter(Type=='Mixed Operation')
plot_operations(filtered)
filtered=merged_data %>% filter(Type=='Mixed Operation')
plot_operations(filtered,F)
filtered=merged_data %>% filter(Type=='Column Operation'
,! Operation %in%  c('Full Outer Join 3 Columns'
,'Left Outer Join 3 Columns'
,'Inner Join 3 Columns')
)
plot_operations(filtered,onlySignificant = F)
plot_operations(filtered,onlySignificant = T)
filtered=merged_data %>% filter(Type=='Column Operation'
,! Operation %in%  c('Full Outer Join 3 Columns'
,'Left Outer Join 3 Columns'
,'Inner Join 3 Columns')
)
plot_operations(filtered,onlySignificant = T)
filtered=merged_data %>% filter(Type=='Column Operation'
,! Operation %in%  c('Full Outer Join 3 Columns'
,'Left Outer Join 3 Columns'
,'Inner Join 3 Columns')
)
plot_operations(filtered,onlySignificant = F)
form=as.formula(paste0(targetVar,' ~ Dataset + Language | Operation '))
model = lm(data=filtered, formula=form)
form=as.formula(paste0(targetVar,' ~ Dataset + Language : Operation '))
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
form=as.formula(paste0(targetVar,' ~ Dataset + Language:Operation '))
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
keep=  names(modelS$coefficients[,4])[modelS$coefficients[,4]<0.05]
keep = gsub('LanguageScala:Operation','',keep[grep('LanguageScala:Operation',keep)])
keep
data2 = filtered[filtered$Operation %in% keep,]
#functions
plot_operations = function(filtered,onlySignificant = T){
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset + Language:Operation '))
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
if(onlySignificant) {
keep=  names(modelS$coefficients[,4])[modelS$coefficients[,4]<0.05]
keep = gsub('LanguageScala:Operation','',keep[grep('LanguageScala:Operation',keep)])
data2 = filtered[filtered$Operation %in% keep,]
print("Only Significant Elements")
if(nrow(data2)==0) {print("No Significant Elements") ; return()}
} else data2=filtered
p=  ggplot(data=data2, aes_string(x='Dataset',y=targetVar,color='Language')) +
ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='line',size=.5 )+
#ggplot2::stat_summary(aes(group=Language),fun.y=median,geom='point',size=.5 )+
geom_jitter(alpha=0.5,size=.5,width=0.1)+
#scale_y_continuous(limits = c(0, quantile(filtered[[targetVar]],probs=outliersQuantile))) +
#geom_boxplot(outlier.size = 0.1,size=0.1) +
#ggplot2::coord_flip() +
facet_wrap(~Operation,scales='free',ncol=4,labeller = label_wrap_gen())
#facet_grid(Operation~Setup,scales='free')
ggplot_colors(p,legend.position = 'bottom')
}
filtered=merged_data %>% filter(Type=='Column Operation'
,! Operation %in%  c('Full Outer Join 3 Columns'
,'Left Outer Join 3 Columns'
,'Inner Join 3 Columns')
)
plot_operations(filtered,onlySignificant = F)
filtered=merged_data %>% filter(Type=='Column Operation'
,! Operation %in%  c('Full Outer Join 3 Columns'
,'Left Outer Join 3 Columns'
,'Inner Join 3 Columns')
)
plot_operations(filtered,onlySignificant = T)
form=as.formula(paste0(targetVar,' ~ Dataset + Language:Operation ')) #we need only interaction, no fixed effect
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
form=as.formula(paste0(targetVar,' ~ Dataset + Language*Operation ')) #we need only interaction, no fixed effect
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
form=as.formula(paste0(targetVar,' ~ Dataset + Operation*Language ')) #we need only interaction, no fixed effect (we know the operations are differnt, we wnat to measure which operation is differnt across alnguage)
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
form=as.formula(paste0(targetVar,' ~  Operation*Language ')) #we need only interaction, no fixed effect (we know the operations are differnt, we wnat to measure which operation is differnt across alnguage)
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
form=as.formula(paste0(targetVar,' ~ Dataset *Operation*Language ')) #we need only interaction, no fixed effect (we know the operations are differnt, we wnat to measure which operation is differnt across alnguage)
model = lm(data=filtered, formula=form)
print(modelS)
form=as.formula(paste0(targetVar,' ~ Dataset*Operation*Language ')) #we need only interaction, no fixed effect (we know the operations are differnt, we wnat to measure which operation is differnt across alnguage)
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
keep=  names(modelS$coefficients[,4])[modelS$coefficients[,4]<0.05]
keep
pmatch(c('one','two','oed'),c('a','o'))
grepl(paste0(iltered$Operation ,collapse='|'),keep)
grepl(paste0(filtered$Operation ,collapse='|'),keep)
keep
lapply(iltered$Operation,function(x){grepl(x,keep)})
lapply(filtered$Operation,function(x){grepl(x,keep)})
lapply(filtered$Operation,function(x){any(grepl(x,keep)}))
lapply(filtered$Operation,function(x){any(grepl(x,keep))})
filtered$Operation
oper = unique(filtered$Operation)
lapply(oper,function(x){any(grepl(x,keep))})
sapply(oper,function(x){any(grepl(x,keep))})
which(sapply(oper,function(x){any(grepl(x,keep))}))
names(which(sapply(oper,function(x){any(grepl(x,keep))})))
data2 = filtered[filtered$Operation %in% keep,]
filtered=merged_data %>% filter(Type=='Row Operation')
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset*Operation*Language ')) #we need fukk interaction,
model = lm(data=filtered, formula=form)
modelS=summary(model)
filtered$Operation = forcats::fct_reorder(filtered$Operation,filtered[[targetVar]],.fun=median,desc=F)
form=as.formula(paste0(targetVar,' ~ Dataset*Operation*Language ')) #we need fukk interaction,
model = lm(data=filtered, formula=form)
modelS=summary(model)
print(modelS)
oper = unique(filtered$Operation)
oper
unique(filtered$Operation)
#find which operation is isgnificant in the interactive terms
keep=  names(modelS$coefficients[,4])[modelS$coefficients[,4]<0.05]
keep
names(which(sapply(oper,function(x){any(grepl(x,keep))})))
oper
grepl(oper[2],keep)
any(grepl(oper[2],keep))
sapply(oper[2],function(x){any(grepl(x,keep))})
sapply(oper,function(x){any(grepl(x,keep))})
which(sapply(oper,function(x){any(grepl(x,keep))}))
oper[which(sapply(oper,function(x){any(grepl(x,keep))})))]
oper[which(sapply(oper,function(x){any(grepl(x,keep))}))]
#find which operation is isgnificant in the interactive terms
keep=  names(modelS$coefficients[,4])[modelS$coefficients[,4]<0.05]
keep
keep=oper[which(sapply(oper,function(x){any(grepl(x,keep,fixed=T))}))] #this does a grepl fo each operation in the significant variables
keep
